/*
 * Results API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formulablu.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Create result request
 */
@JsonPropertyOrder({
  CreateResultRequest.JSON_PROPERTY_RACE_ID,
  CreateResultRequest.JSON_PROPERTY_DRIVER_ID,
  CreateResultRequest.JSON_PROPERTY_TEAM_ID,
  CreateResultRequest.JSON_PROPERTY_POSITION,
  CreateResultRequest.JSON_PROPERTY_POINTS,
  CreateResultRequest.JSON_PROPERTY_STATUS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class CreateResultRequest {
  public static final String JSON_PROPERTY_RACE_ID = "raceId";
  @jakarta.annotation.Nonnull
  private String raceId;

  public static final String JSON_PROPERTY_DRIVER_ID = "driverId";
  @jakarta.annotation.Nonnull
  private String driverId;

  public static final String JSON_PROPERTY_TEAM_ID = "teamId";
  @jakarta.annotation.Nonnull
  private String teamId;

  public static final String JSON_PROPERTY_POSITION = "position";
  @jakarta.annotation.Nonnull
  private Integer position;

  public static final String JSON_PROPERTY_POINTS = "points";
  @jakarta.annotation.Nonnull
  private Float points;

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nonnull
  private String status;

  public CreateResultRequest() {
  }

  public CreateResultRequest raceId(@jakarta.annotation.Nonnull String raceId) {
    
    this.raceId = raceId;
    return this;
  }

  /**
   * Get raceId
   * @return raceId
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_RACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRaceId() {
    return raceId;
  }


  @JsonProperty(JSON_PROPERTY_RACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRaceId(@jakarta.annotation.Nonnull String raceId) {
    this.raceId = raceId;
  }


  public CreateResultRequest driverId(@jakarta.annotation.Nonnull String driverId) {
    
    this.driverId = driverId;
    return this;
  }

  /**
   * Get driverId
   * @return driverId
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_DRIVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDriverId() {
    return driverId;
  }


  @JsonProperty(JSON_PROPERTY_DRIVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDriverId(@jakarta.annotation.Nonnull String driverId) {
    this.driverId = driverId;
  }


  public CreateResultRequest teamId(@jakarta.annotation.Nonnull String teamId) {
    
    this.teamId = teamId;
    return this;
  }

  /**
   * Get teamId
   * @return teamId
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTeamId(@jakarta.annotation.Nonnull String teamId) {
    this.teamId = teamId;
  }


  public CreateResultRequest position(@jakarta.annotation.Nonnull Integer position) {
    
    this.position = position;
    return this;
  }

  /**
   * Get position
   * minimum: 1
   * @return position
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Min(1)
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosition(@jakarta.annotation.Nonnull Integer position) {
    this.position = position;
  }


  public CreateResultRequest points(@jakarta.annotation.Nonnull Float points) {
    
    this.points = points;
    return this;
  }

  /**
   * Get points
   * minimum: 0
   * @return points
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @DecimalMin("0")
  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getPoints() {
    return points;
  }


  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPoints(@jakarta.annotation.Nonnull Float points) {
    this.points = points;
  }


  public CreateResultRequest status(@jakarta.annotation.Nonnull String status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Size(min=1,max=50)
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResultRequest createResultRequest = (CreateResultRequest) o;
    return Objects.equals(this.raceId, createResultRequest.raceId) &&
        Objects.equals(this.driverId, createResultRequest.driverId) &&
        Objects.equals(this.teamId, createResultRequest.teamId) &&
        Objects.equals(this.position, createResultRequest.position) &&
        Objects.equals(this.points, createResultRequest.points) &&
        Objects.equals(this.status, createResultRequest.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(raceId, driverId, teamId, position, points, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResultRequest {\n");
    sb.append("    raceId: ").append(toIndentedString(raceId)).append("\n");
    sb.append("    driverId: ").append(toIndentedString(driverId)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

