/*
 * Drivers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formulablu.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Create driver request
 */
@JsonPropertyOrder({
  CreateDriverRequest.JSON_PROPERTY_FIRST_NAME,
  CreateDriverRequest.JSON_PROPERTY_LAST_NAME,
  CreateDriverRequest.JSON_PROPERTY_NATIONALITY,
  CreateDriverRequest.JSON_PROPERTY_DATE_OF_BIRTH
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class CreateDriverRequest {
  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  @jakarta.annotation.Nonnull
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  @jakarta.annotation.Nonnull
  private String lastName;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  @jakarta.annotation.Nonnull
  private String nationality;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "dateOfBirth";
  @jakarta.annotation.Nonnull
  private OffsetDateTime dateOfBirth;

  public CreateDriverRequest() {
  }

  public CreateDriverRequest firstName(@jakarta.annotation.Nonnull String firstName) {
    
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Size(min=1,max=50)
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(@jakarta.annotation.Nonnull String firstName) {
    this.firstName = firstName;
  }


  public CreateDriverRequest lastName(@jakarta.annotation.Nonnull String lastName) {
    
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Size(min=1,max=50)
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(@jakarta.annotation.Nonnull String lastName) {
    this.lastName = lastName;
  }


  public CreateDriverRequest nationality(@jakarta.annotation.Nonnull String nationality) {
    
    this.nationality = nationality;
    return this;
  }

  /**
   * Get nationality
   * @return nationality
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Size(min=2,max=3)
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNationality(@jakarta.annotation.Nonnull String nationality) {
    this.nationality = nationality;
  }


  public CreateDriverRequest dateOfBirth(@jakarta.annotation.Nonnull OffsetDateTime dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

  /**
   * Get dateOfBirth
   * @return dateOfBirth
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateOfBirth(@jakarta.annotation.Nonnull OffsetDateTime dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDriverRequest createDriverRequest = (CreateDriverRequest) o;
    return Objects.equals(this.firstName, createDriverRequest.firstName) &&
        Objects.equals(this.lastName, createDriverRequest.lastName) &&
        Objects.equals(this.nationality, createDriverRequest.nationality) &&
        Objects.equals(this.dateOfBirth, createDriverRequest.dateOfBirth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, nationality, dateOfBirth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDriverRequest {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

