/*
 * Races API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formulablu.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Update race request
 */
@JsonPropertyOrder({
  UpdateRaceRequest.JSON_PROPERTY_NAME,
  UpdateRaceRequest.JSON_PROPERTY_SEASON_ID,
  UpdateRaceRequest.JSON_PROPERTY_TRACK_ID,
  UpdateRaceRequest.JSON_PROPERTY_RACE_DATE,
  UpdateRaceRequest.JSON_PROPERTY_IS_COMPLETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class UpdateRaceRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_SEASON_ID = "seasonId";
  @jakarta.annotation.Nullable
  private String seasonId;

  public static final String JSON_PROPERTY_TRACK_ID = "trackId";
  @jakarta.annotation.Nullable
  private String trackId;

  public static final String JSON_PROPERTY_RACE_DATE = "raceDate";
  @jakarta.annotation.Nullable
  private OffsetDateTime raceDate;

  public static final String JSON_PROPERTY_IS_COMPLETED = "isCompleted";
  @jakarta.annotation.Nullable
  private Boolean isCompleted;

  public UpdateRaceRequest() {
  }

  public UpdateRaceRequest name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
 @Size(min=1,max=100)
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public UpdateRaceRequest seasonId(@jakarta.annotation.Nullable String seasonId) {
    
    this.seasonId = seasonId;
    return this;
  }

  /**
   * Get seasonId
   * @return seasonId
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SEASON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSeasonId() {
    return seasonId;
  }


  @JsonProperty(JSON_PROPERTY_SEASON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeasonId(@jakarta.annotation.Nullable String seasonId) {
    this.seasonId = seasonId;
  }


  public UpdateRaceRequest trackId(@jakarta.annotation.Nullable String trackId) {
    
    this.trackId = trackId;
    return this;
  }

  /**
   * Get trackId
   * @return trackId
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_TRACK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrackId() {
    return trackId;
  }


  @JsonProperty(JSON_PROPERTY_TRACK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackId(@jakarta.annotation.Nullable String trackId) {
    this.trackId = trackId;
  }


  public UpdateRaceRequest raceDate(@jakarta.annotation.Nullable OffsetDateTime raceDate) {
    
    this.raceDate = raceDate;
    return this;
  }

  /**
   * Get raceDate
   * @return raceDate
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_RACE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRaceDate() {
    return raceDate;
  }


  @JsonProperty(JSON_PROPERTY_RACE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRaceDate(@jakarta.annotation.Nullable OffsetDateTime raceDate) {
    this.raceDate = raceDate;
  }


  public UpdateRaceRequest isCompleted(@jakarta.annotation.Nullable Boolean isCompleted) {
    
    this.isCompleted = isCompleted;
    return this;
  }

  /**
   * Get isCompleted
   * @return isCompleted
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IS_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCompleted() {
    return isCompleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCompleted(@jakarta.annotation.Nullable Boolean isCompleted) {
    this.isCompleted = isCompleted;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateRaceRequest updateRaceRequest = (UpdateRaceRequest) o;
    return Objects.equals(this.name, updateRaceRequest.name) &&
        Objects.equals(this.seasonId, updateRaceRequest.seasonId) &&
        Objects.equals(this.trackId, updateRaceRequest.trackId) &&
        Objects.equals(this.raceDate, updateRaceRequest.raceDate) &&
        Objects.equals(this.isCompleted, updateRaceRequest.isCompleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, seasonId, trackId, raceDate, isCompleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateRaceRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    seasonId: ").append(toIndentedString(seasonId)).append("\n");
    sb.append("    trackId: ").append(toIndentedString(trackId)).append("\n");
    sb.append("    raceDate: ").append(toIndentedString(raceDate)).append("\n");
    sb.append("    isCompleted: ").append(toIndentedString(isCompleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

