/*
 * Races API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formulablu.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.formulablu.api.model.EntityMetadata;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Formula 1 Race
 */
@JsonPropertyOrder({
  Race.JSON_PROPERTY_ID,
  Race.JSON_PROPERTY_NAME,
  Race.JSON_PROPERTY_SEASON_ID,
  Race.JSON_PROPERTY_TRACK_ID,
  Race.JSON_PROPERTY_RACE_DATE,
  Race.JSON_PROPERTY_IS_COMPLETED,
  Race.JSON_PROPERTY_METADATA
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Race {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_SEASON_ID = "seasonId";
  @jakarta.annotation.Nonnull
  private String seasonId;

  public static final String JSON_PROPERTY_TRACK_ID = "trackId";
  @jakarta.annotation.Nonnull
  private String trackId;

  public static final String JSON_PROPERTY_RACE_DATE = "raceDate";
  @jakarta.annotation.Nonnull
  private OffsetDateTime raceDate;

  public static final String JSON_PROPERTY_IS_COMPLETED = "isCompleted";
  @jakarta.annotation.Nonnull
  private Boolean isCompleted;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @jakarta.annotation.Nonnull
  private EntityMetadata metadata;

  public Race() {
  }

  public Race id(@jakarta.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }


  public Race name(@jakarta.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }


  public Race seasonId(@jakarta.annotation.Nonnull String seasonId) {
    
    this.seasonId = seasonId;
    return this;
  }

  /**
   * Get seasonId
   * @return seasonId
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_SEASON_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSeasonId() {
    return seasonId;
  }


  @JsonProperty(JSON_PROPERTY_SEASON_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeasonId(@jakarta.annotation.Nonnull String seasonId) {
    this.seasonId = seasonId;
  }


  public Race trackId(@jakarta.annotation.Nonnull String trackId) {
    
    this.trackId = trackId;
    return this;
  }

  /**
   * Get trackId
   * @return trackId
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_TRACK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTrackId() {
    return trackId;
  }


  @JsonProperty(JSON_PROPERTY_TRACK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTrackId(@jakarta.annotation.Nonnull String trackId) {
    this.trackId = trackId;
  }


  public Race raceDate(@jakarta.annotation.Nonnull OffsetDateTime raceDate) {
    
    this.raceDate = raceDate;
    return this;
  }

  /**
   * Get raceDate
   * @return raceDate
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_RACE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getRaceDate() {
    return raceDate;
  }


  @JsonProperty(JSON_PROPERTY_RACE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRaceDate(@jakarta.annotation.Nonnull OffsetDateTime raceDate) {
    this.raceDate = raceDate;
  }


  public Race isCompleted(@jakarta.annotation.Nonnull Boolean isCompleted) {
    
    this.isCompleted = isCompleted;
    return this;
  }

  /**
   * Get isCompleted
   * @return isCompleted
   */
  @jakarta.annotation.Nonnull
  @NotNull

  @JsonProperty(JSON_PROPERTY_IS_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsCompleted() {
    return isCompleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsCompleted(@jakarta.annotation.Nonnull Boolean isCompleted) {
    this.isCompleted = isCompleted;
  }


  public Race metadata(@jakarta.annotation.Nonnull EntityMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(@jakarta.annotation.Nonnull EntityMetadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Race race = (Race) o;
    return Objects.equals(this.id, race.id) &&
        Objects.equals(this.name, race.name) &&
        Objects.equals(this.seasonId, race.seasonId) &&
        Objects.equals(this.trackId, race.trackId) &&
        Objects.equals(this.raceDate, race.raceDate) &&
        Objects.equals(this.isCompleted, race.isCompleted) &&
        Objects.equals(this.metadata, race.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, seasonId, trackId, raceDate, isCompleted, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Race {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    seasonId: ").append(toIndentedString(seasonId)).append("\n");
    sb.append("    trackId: ").append(toIndentedString(trackId)).append("\n");
    sb.append("    raceDate: ").append(toIndentedString(raceDate)).append("\n");
    sb.append("    isCompleted: ").append(toIndentedString(isCompleted)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

