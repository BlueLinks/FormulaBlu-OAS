/*
 * Races API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formulablu.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Entity metadata
 */
@JsonPropertyOrder({
  EntityMetadata.JSON_PROPERTY_CREATED_AT_TIMESTAMP,
  EntityMetadata.JSON_PROPERTY_MODIFIED_AT_TIMESTAMP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class EntityMetadata {
  public static final String JSON_PROPERTY_CREATED_AT_TIMESTAMP = "createdAtTimestamp";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAtTimestamp;

  public static final String JSON_PROPERTY_MODIFIED_AT_TIMESTAMP = "modifiedAtTimestamp";
  @jakarta.annotation.Nonnull
  private OffsetDateTime modifiedAtTimestamp;

  public EntityMetadata() {
  }

  public EntityMetadata createdAtTimestamp(@jakarta.annotation.Nonnull OffsetDateTime createdAtTimestamp) {
    
    this.createdAtTimestamp = createdAtTimestamp;
    return this;
  }

  /**
   * Get createdAtTimestamp
   * @return createdAtTimestamp
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_CREATED_AT_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAtTimestamp() {
    return createdAtTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAtTimestamp(@jakarta.annotation.Nonnull OffsetDateTime createdAtTimestamp) {
    this.createdAtTimestamp = createdAtTimestamp;
  }


  public EntityMetadata modifiedAtTimestamp(@jakarta.annotation.Nonnull OffsetDateTime modifiedAtTimestamp) {
    
    this.modifiedAtTimestamp = modifiedAtTimestamp;
    return this;
  }

  /**
   * Get modifiedAtTimestamp
   * @return modifiedAtTimestamp
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_MODIFIED_AT_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getModifiedAtTimestamp() {
    return modifiedAtTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_AT_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedAtTimestamp(@jakarta.annotation.Nonnull OffsetDateTime modifiedAtTimestamp) {
    this.modifiedAtTimestamp = modifiedAtTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityMetadata entityMetadata = (EntityMetadata) o;
    return Objects.equals(this.createdAtTimestamp, entityMetadata.createdAtTimestamp) &&
        Objects.equals(this.modifiedAtTimestamp, entityMetadata.modifiedAtTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAtTimestamp, modifiedAtTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityMetadata {\n");
    sb.append("    createdAtTimestamp: ").append(toIndentedString(createdAtTimestamp)).append("\n");
    sb.append("    modifiedAtTimestamp: ").append(toIndentedString(modifiedAtTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

